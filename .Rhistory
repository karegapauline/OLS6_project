knitr::opts_chunk$set(echo = TRUE)
input <- ["CRC.csv",c('time','crimerate')]
input <- ["CRC.csv",c('time','crimerate')]
#input <- ["CRC.csv",c('time','crimerate')]
#print(head(input))
getwd()
getwd()
print(head(input))
file <- read.csv("CRC.csv")
#input <- ["CRC.csv",c('time','crimerate')]
#print(head(input))
#getwd()
#input <- ["CRC.csv",c('time','crimerate')]
print(head(file))
file <- read.csv("CRC.csv")
input <- [file,c('time','crimerate')]
file <- read.csv("CRC.csv")
input <- file[,c('time','crimerate')]
file <- read.csv("CRC.csv")
input <- file[,c('Time','Crime Rtae')]
file <- read.csv("CRC.csv")
input <- file[,c('Time','CrimeRtae')]
file <- read.csv("CRC.csv")
input <- file[,c('Time','CrimeRate')]
file <- read.csv("CRC.csv")
#input <- file[,c('Time','CrimeRate')]
print(head(file))
#getwd()
file <- read.csv("CRC.txt")
#input <- file[,c('Time','CrimeRate')]
print(head(file))
#getwd()
file <- read.csv("CRC.txt")
input <- file[,c('Time','CrimeRate')]
file <- read.csv("CRC.csv", header = TRUE)
#input <- file[,c('Time','CrimeRate')]
print(head(file))
#getwd()
file <- read.csv("CRC.csv", header = TRUE)
input <- file[,c('Time','CrimeRate')]
file <- read.csv("CRC.csv")
#plot(file$ï..Time )
input <- file[,c('ï..Time','CrimeRate')]
print(head(input))
#getwd()
file <- read.csv("CRC.csv")
#plot(file$ï..Time )
input <- file[,c('ï..Time','CrimeRate')]
print(head(input))
png(file = "scatterplot.png")
plot(x = input$ï..Time,y = input$CrimeRate,
xlab = "Time",
ylab = "CrimeRate",
xlim = c(2.5,5),
ylim = c(15,30),
main = "Time vs CrimeRate"
)
#getwd()
file <- read.csv("CRC.csv")
#plot(file$ï..Time )
input <- file[,c('ï..Time','CrimeRate')]
#print(head(input))
png(file = "scatterplot.png")
plot(x = input$ï..Time,y = input$CrimeRate,
xlab = "Time",
ylab = "CrimeRate",
xlim = c(2.5,5),
ylim = c(15,30),
main = "Time vs CrimeRate"
)
dev.off()
#getwd()
file <- read.csv("CRC.csv")
#plot(file$ï..Time )
input <- file[,c('ï..Time','CrimeRate')]
#print(head(input))
png(file = "scatterplot.png")
plot(x = input$ï..Time,y = input$CrimeRate,
xlab = "Time",
ylab = "CrimeRate",
main = "Time vs CrimeRate"
)
dev.off()
#getwd()
file <- read.csv("CRC.csv")
#plot(file$ï..Time )
input <- file[,c('ï..Time','CrimeRate')]
#print(head(input))
png(file = "scatterplot.png")
plot(input$ï..Time ~ input$CrimeRate,
xlab = "ï..Time",
ylab = "CrimeRate",
main = "Time vs CrimeRate"
)
file <- read.csv("CRC.csv")
#plot(file$ï..Time )
input <- file[,c('ï..Time','CrimeRate')]
#print(head(input))
png(file = "scatterplot.png")
plot(input$ï..Time ~ input$CrimeRate,
xlab = "ï..Time",
ylab = "CrimeRate",
main = "Time vs CrimeRate"
)
file <- read.csv("CRC.csv")
#plot(file$ï..Time )
input <- file[,c('ï..Time','CrimeRate')]
#print(head(input))
png(file = "scatterplot.png")
plot(input$ï..Time ~ input$CrimeRate,xlab = "ï..Time",ylab = "CrimeRate",main = "Time vs CrimeRate")
file <- read.csv("CRC.csv")
#plot(file$ï..Time )
input <- file[,c('ï..Time','CrimeRate')]
#print(head(input))
png(file = "scatterplot.png")
plot(input$ï..Time ~ input$CrimeRate,xlab = "ï..Time",ylab = "CrimeRate",main = "Time vs CrimeRate")
install.packages("plot.matrix")
file <- read.csv("CRC.csv")
#plot(file$ï..Time )
input <- file[,c('ï..Time','CrimeRate')]
#print(head(input))
plot(input$ï..Time ~ input$CrimeRate,xlab = "ï..Time",ylab = "CrimeRate",main = "Time vs CrimeRate")
#plot(input$ï..Time ~ input$CrimeRate,xlab = "ï..Time",ylab = "CrimeRate",main = "Time vs CrimeRate")
library(Hmisc)
install.packages("Hmisc")
file <- read.csv("CRC.csv")
#plot(file$ï..Time )
input <- file[,c('ï..Time','CrimeRate')]
#print(head(input))
#plot(input$ï..Time ~ input$CrimeRate,xlab = "ï..Time",ylab = "CrimeRate",main = "Time vs CrimeRate")
library(Hmisc)
rcorr(x, type="pearson")
file <- read.csv("CRC.csv")
#plot(file$ï..Time )
input <- file[,c('ï..Time','CrimeRate')]
#print(head(input))
#plot(input$ï..Time ~ input$CrimeRate,xlab = "ï..Time",ylab = "CrimeRate",main = "Time vs CrimeRate")
library(Hmisc)
rcorr(input, type="pearson")
getwd()
head(mydata)
# Read data
mydata <- read.csv("../Desktop/HackBio/Programming4Lifescience/femaleMiceWeights.csv")
head(mydata)
View(mydata)
chowdf
chowdf <- subset(mydata,grep("chow"))
chowdf <- subset(mydata,grep("chow",nm))
chowdf <- subset(mydata,select = Diet:chow)
chowdf <- subset(mydata,select = Diet$chow)
chowdf <- with(mydata,subset(Diet, Diet = chow)
chowdf <- with(mydata,subset(Diet, Diet = chow))
chowdf
chowdf <- with(mydata,subset(Diet, Diet = chow))
chowdf <- with(mydata, subset(Diet, Diet = chow))
#split df to 2 spearate data
chowdf <- subset(mydata, Diet = "chow")
chowdf
#split df to 2 spearate data
chowdf <- mydata[mydata$Diet = chow, ]
#split df to 2 spearate data
chowdf <- mydata[mydata$Diet = "chow", ]
#split df to 2 spearate data
chowdf <- mydata[mydata$Diet "chow"]
#split df to 2 spearate data
chowdf <- mydata[mydata$Diet = "chow"]
#split df to 2 spearate data
chowdf <- mydata[mydata$Diet == "chow"]
# Read data
mydata <- read.csv("../Desktop/HackBio/Programming4Lifescience/femaleMiceWeights.csv", header = TRUE)
#split df to 2 spearate data
chowdf <- subset(mydata, Diet == "chow", select = -Diet)
chowdf
#split df to 2 spearate data
chowdf <- subset(mydata, Diet == "chow", select = Diet)
chowdf
#split df to 2 spearate data
chowdf <- subset(mydata, Diet == "chow")
chowdf
hfdf <- subset(mydata, Diet == "hf")
hfdf
# mean and variance calculation
mean(chowdf$Bodyweight)
var(chowdf$Bodyweight)
mean(hfdf$Bodyweight)
var(hfdf$Bodyweight)
#mean and variance of whole group
mean(mydata$Bodyweight)
var(mydata$Bodyweight)
# Function to calculate mean of 3 members
Meanof<-function(val1,val2,val3){
getmean<-(val1+val2+val3)/3
return(getmean)
}
Meanof(20,30,40)
dataset <- c(32.2, 37.5, 41.7, 53.8, 50.2, 48.2, 46.3, 65.0,  44.8)
mean(dataset)
sorted <- sort(dataset)
sorted
median(sorted)
dataset2 <- c(32.2, 37.5, 41.7, 53.8, 50.2, 48.2, 46.3, 46.5,  44.8)
mean2 <- mean(dataset2)
mean2
sorted2 <- sort(dataset2)
sorted2
median(sorted2)
RStudio.Version()
R.Version()
install.packages("stringi")
install.packages("stringi")
install.packages("stringi")
knitr::opts_chunk$set(echo = TRUE)
library(rtweet)
install.packages("rtweet")
library(rtweet)
auth_setup_default()
getwd()
setwd("C:/Users/ADMIN/Desktop/OLS6_project/")
#standardAPI
create_token(
app = "HP&A",
consumer_key = "TuWHraZocjlVuMkHTC5MZnCCI",
consumer_secret = "26y9dVp8BmkLL6lrDoeiFgN0sRLrGD9iERz7rQoLWuBva1KkpL",
access_token = "924968036-1fkkJZNvsg4PoRKa6YrUr4Fo2mkSZCtfNdZX0vLY",
access_secret = "b7CVHhE7nH6RbRzWThOsx8FCkqhiN3JjMkgvXZqdDinuS",
set_row = TRUE
)
#standardAPI
create_token(
app = "HP&A",
consumer_key = "TuWHraZocjlVuMkHTC5MZnCCI",
consumer_secret = "26y9dVp8BmkLL6lrDoeiFgN0sRLrGD9iERz7rQoLWuBva1KkpL",
access_token = "924968036-1fkkJZNvsg4PoRKa6YrUr4Fo2mkSZCtfNdZX0vLY",
access_secret = "b7CVHhE7nH6RbRzWThOsx8FCkqhiN3JjMkgvXZqdDinuS",
set_renv = TRUE
)
bhki <- get_timeline("KEMRI_Wellcome", n = 200)
bhki <- get_timeline("KEMRI_Wellcome", n = 200)
knitr::opts_chunk$set(echo = TRUE)
#standardAPI
create_token(
app = "HP&A",
consumer_key = "TuWHraZocjlVuMkHTC5MZnCCI",
consumer_secret = "26y9dVp8BmkLL6lrDoeiFgN0sRLrGD9iERz7rQoLWuBva1KkpL",
access_token = "924968036-1fkkJZNvsg4PoRKa6YrUr4Fo2mkSZCtfNdZX0vLY",
access_secret = "b7CVHhE7nH6RbRzWThOsx8FCkqhiN3JjMkgvXZqdDinuS",
set_renv = TRUE
)
#standardAPI
create_token(
app = "HP&A",
consumer_key = "TuWHraZocjlVuMkHTC5MZnCCI",
consumer_secret = "26y9dVp8BmkLL6lrDoeiFgN0sRLrGD9iERz7rQoLWuBva1KkpL",
access_token = "924968036-1fkkJZNvsg4PoRKa6YrUr4Fo2mkSZCtfNdZX0vLY",
access_secret = "b7CVHhE7nH6RbRzWThOsx8FCkqhiN3JjMkgvXZqdDinuS",
set_renv = TRUE
)
knitr::opts_chunk$set(echo = TRUE)
#standardAPI
create_token(
app = "HP&A",
consumer_key = "TuWHraZocjlVuMkHTC5MZnCCI",
consumer_secret = "26y9dVp8BmkLL6lrDoeiFgN0sRLrGD9iERz7rQoLWuBva1KkpL",
access_token = "924968036-1fkkJZNvsg4PoRKa6YrUr4Fo2mkSZCtfNdZX0vLY",
access_secret = "b7CVHhE7nH6RbRzWThOsx8FCkqhiN3JjMkgvXZqdDinuS",
set_renv = TRUE
)
